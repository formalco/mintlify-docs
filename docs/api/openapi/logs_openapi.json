{
    "openapi": "3.0.0",
    "info": {
        "title": "Log Service",
        "version": "1.0",
        "contact": {
            "name": "Formal",
            "url": "https://docs.private.joinformal.com/",
            "email": "info@joinformal.com"
        }
    },
    "tags": [
        {
            "name": "LogsService"
        }
    ],
    "paths": {
        "/core.v1.LogsService/CreateEncryptionKey": {
            "post": {
                "summary": "Create encryption key",
                "description": "Create an encryption key",
                "operationId": "LogsService_CreateEncryptionKey",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1CreateEncryptionKeyResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1CreateEncryptionKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/CreateLogConfiguration": {
            "post": {
                "summary": "Create log configuration",
                "description": "Create a log configuration",
                "operationId": "LogsService_CreateLogConfiguration",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1CreateLogConfigurationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1CreateLogConfigurationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/CreateLogQuery": {
            "post": {
                "summary": "Create log query",
                "description": "Create a log query",
                "operationId": "LogsService_CreateLogQuery",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1CreateLogQueryResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1CreateLogQueryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/DeleteEncryptionKey": {
            "post": {
                "summary": "Delete encryption key",
                "description": "Delete an encryption key",
                "operationId": "LogsService_DeleteEncryptionKey",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1DeleteEncryptionKeyResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1DeleteEncryptionKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/DeleteLogConfiguration": {
            "post": {
                "summary": "Delete log configuration",
                "description": "Delete a log configuration",
                "operationId": "LogsService_DeleteLogConfiguration",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1DeleteLogConfigurationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1DeleteLogConfigurationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/DeleteLogQuery": {
            "post": {
                "summary": "Delete log query",
                "description": "Delete a log query",
                "operationId": "LogsService_DeleteLogQuery",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1DeleteLogQueryResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1DeleteLogQueryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/GetEncryptionKey": {
            "post": {
                "summary": "Get encryption key",
                "description": "Get an encryption key by ID",
                "operationId": "LogsService_GetEncryptionKey",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetEncryptionKeyResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetEncryptionKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/GetEncryptionKeysByKeyId": {
            "post": {
                "summary": "Get encryption keys by key ID",
                "description": "Get encryption keys by key ID",
                "operationId": "LogsService_GetEncryptionKeysByKeyId",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetEncryptionKeysByKeyIdResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetEncryptionKeysByKeyIdRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/GetGroupByAggregation": {
            "post": {
                "summary": "Get group by aggregation",
                "description": "Get a group by aggregation",
                "operationId": "LogsService_GetGroupByAggregation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetGroupByAggregationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetGroupByAggregationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/GetLog": {
            "post": {
                "summary": "Get log",
                "description": "Get a log",
                "operationId": "LogsService_GetLog",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetLogResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetLogRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/GetLogConfiguration": {
            "post": {
                "summary": "Get log configuration",
                "description": "Get a log configuration",
                "operationId": "LogsService_GetLogConfiguration",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetLogConfigurationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetLogConfigurationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/GetLogQuery": {
            "post": {
                "summary": "Get log query",
                "description": "Get a log query",
                "operationId": "LogsService_GetLogQuery",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetLogQueryResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetLogQueryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/GetMetricAggregation": {
            "post": {
                "summary": "Get metric aggregation",
                "description": "Get a metric aggregation",
                "operationId": "LogsService_GetMetricAggregation",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetMetricAggregationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetMetricAggregationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/ListEncryptionKeys": {
            "post": {
                "summary": "List encryption keys",
                "description": "List encryption keys with pagination and filtering",
                "operationId": "LogsService_ListEncryptionKeys",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ListEncryptionKeysResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ListEncryptionKeysRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/ListLogAggregations": {
            "post": {
                "summary": "List log aggregations",
                "description": "Get log aggregations for a time window",
                "operationId": "LogsService_ListLogAggregations",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ListLogAggregationsResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ListLogAggregationsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/ListLogConfigurations": {
            "post": {
                "summary": "List log configurations",
                "description": "List all log configurations",
                "operationId": "LogsService_ListLogConfigurations",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ListLogConfigurationsResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ListLogConfigurationsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/ListLogQueries": {
            "post": {
                "summary": "List log queries",
                "description": "List all log queries",
                "operationId": "LogsService_ListLogQueries",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ListLogQueriesResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ListLogQueriesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/ListLogs": {
            "post": {
                "summary": "List logs",
                "description": "List all logs",
                "operationId": "LogsService_ListLogs",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ListLogsResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ListLogsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/ListLogsV2": {
            "post": {
                "summary": "List logs V2",
                "description": "List logs data only (without aggregations) for fast pagination",
                "operationId": "LogsService_ListLogsV2",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ListLogsV2Response"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ListLogsV2Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/UpdateEncryptionKey": {
            "post": {
                "summary": "Update encryption key",
                "description": "Update an encryption key",
                "operationId": "LogsService_UpdateEncryptionKey",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1UpdateEncryptionKeyResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1UpdateEncryptionKeyRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/UpdateLogConfiguration": {
            "post": {
                "summary": "Update log configuration",
                "description": "Update a log configuration",
                "operationId": "LogsService_UpdateLogConfiguration",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1UpdateLogConfigurationResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1UpdateLogConfigurationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        },
        "/core.v1.LogsService/UpdateLogQuery": {
            "post": {
                "summary": "Update log query",
                "description": "Update a log query",
                "operationId": "LogsService_UpdateLogQuery",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1UpdateLogQueryResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1UpdateLogQueryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "LogsService"
                ]
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ],
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "name": "X-API-Key",
                "in": "header"
            }
        },
        "schemas": {
            "protobufAny": {
                "type": "object",
                "properties": {
                    "@type": {
                        "type": "string",
                        "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                    }
                },
                "additionalProperties": {},
                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
            },
            "protobufNullValue": {
                "type": "string",
                "enum": [
                    "NULL_VALUE"
                ],
                "default": "NULL_VALUE",
                "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\nThe JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
            },
            "rpcStatus": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/protobufAny"
                        }
                    }
                }
            },
            "v1CreateEncryptionKeyRequest": {
                "type": "object",
                "properties": {
                    "provider": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "algorithm": {
                        "type": "string"
                    },
                    "decryptorUri": {
                        "type": "string"
                    }
                }
            },
            "v1CreateEncryptionKeyResponse": {
                "type": "object",
                "properties": {
                    "encryptionKey": {
                        "$ref": "#/components/schemas/v1EncryptionKey"
                    }
                }
            },
            "v1CreateLogConfigurationRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "encryptionKeyId": {
                        "type": "string"
                    },
                    "scope": {
                        "$ref": "#/components/schemas/v1LogConfigurationScope"
                    },
                    "request": {
                        "$ref": "#/components/schemas/v1LogConfigurationRequest"
                    },
                    "response": {
                        "$ref": "#/components/schemas/v1LogConfigurationResponse"
                    },
                    "stream": {
                        "$ref": "#/components/schemas/v1LogConfigurationStream"
                    }
                }
            },
            "v1CreateLogConfigurationResponse": {
                "type": "object",
                "properties": {
                    "logConfiguration": {
                        "$ref": "#/components/schemas/v1LogConfiguration"
                    }
                }
            },
            "v1CreateLogQueryRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "query": {
                        "$ref": "#/components/schemas/v1SavedLogQuery"
                    }
                }
            },
            "v1CreateLogQueryResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteEncryptionKeyRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteEncryptionKeyResponse": {
                "type": "object"
            },
            "v1DeleteLogConfigurationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteLogConfigurationResponse": {
                "type": "object"
            },
            "v1DeleteLogQueryRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteLogQueryResponse": {
                "type": "object"
            },
            "v1EncryptionKey": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "provider": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "algorithm": {
                        "type": "string"
                    },
                    "decryptorUri": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "v1ErrorObject": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                }
            },
            "v1Field": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/protobufAny"
                    }
                }
            },
            "v1FieldGroup": {
                "type": "object",
                "properties": {
                    "operator": {
                        "type": "string"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Filter"
                        }
                    }
                }
            },
            "v1Filter": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/v1Field"
                    },
                    "group": {
                        "$ref": "#/components/schemas/v1FieldGroup"
                    }
                }
            },
            "v1GetEncryptionKeyRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1GetEncryptionKeyResponse": {
                "type": "object",
                "properties": {
                    "encryptionKey": {
                        "$ref": "#/components/schemas/v1EncryptionKey"
                    }
                }
            },
            "v1GetEncryptionKeysByKeyIdRequest": {
                "type": "object",
                "properties": {
                    "keyId": {
                        "type": "string"
                    }
                }
            },
            "v1GetEncryptionKeysByKeyIdResponse": {
                "type": "object",
                "properties": {
                    "encryptionKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1EncryptionKey"
                        }
                    }
                }
            },
            "v1GetGroupByAggregationRequest": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string"
                    },
                    "startTimestamp": {
                        "type": "string"
                    },
                    "endTimestamp": {
                        "type": "string"
                    },
                    "groupByFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v1GetGroupByAggregationResponse": {
                "type": "object",
                "properties": {
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1GetGroupByAggregationResponseBucket"
                        }
                    }
                }
            },
            "v1GetGroupByAggregationResponseBucket": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "docCount": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1GetGroupByAggregationResponseBucket"
                        }
                    }
                }
            },
            "v1GetLogConfigurationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1GetLogConfigurationResponse": {
                "type": "object",
                "properties": {
                    "logConfiguration": {
                        "$ref": "#/components/schemas/v1LogConfiguration"
                    }
                }
            },
            "v1GetLogQueryRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1GetLogQueryResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1LogQueryMetadata"
                    }
                }
            },
            "v1GetLogRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1GetLogResponse": {
                "type": "object",
                "properties": {
                    "log": {
                        "type": "object"
                    }
                }
            },
            "v1GetMetricAggregationRequest": {
                "type": "object",
                "properties": {
                    "metricAggregation": {
                        "$ref": "#/components/schemas/v1MetricAggregation"
                    },
                    "query": {
                        "type": "string"
                    },
                    "startTimestamp": {
                        "type": "string"
                    },
                    "endTimestamp": {
                        "type": "string"
                    }
                }
            },
            "v1GetMetricAggregationResponse": {
                "type": "object",
                "properties": {
                    "aggregation": {
                        "$ref": "#/components/schemas/v1MetricAggregation"
                    },
                    "value": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "v1ListEncryptionKeysRequest": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "order": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    },
                    "searchFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "filter": {
                        "$ref": "#/components/schemas/v1Filter"
                    }
                }
            },
            "v1ListEncryptionKeysResponse": {
                "type": "object",
                "properties": {
                    "encryptionKeys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1EncryptionKey"
                        }
                    },
                    "listMetadata": {
                        "$ref": "#/components/schemas/v1ListMetadata"
                    }
                }
            },
            "v1ListLogAggregationsRequest": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string"
                    },
                    "startTimestamp": {
                        "type": "string"
                    },
                    "endTimestamp": {
                        "type": "string"
                    },
                    "histogramInterval": {
                        "type": "string"
                    },
                    "histogramGroupByFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v1ListLogAggregationsResponse": {
                "type": "object",
                "properties": {
                    "aggregations": {
                        "$ref": "#/components/schemas/v1ListLogsResponseAggregations"
                    },
                    "numHits": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "v1ListLogConfigurationsRequest": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "order": {
                        "type": "string"
                    }
                }
            },
            "v1ListLogConfigurationsResponse": {
                "type": "object",
                "properties": {
                    "logConfigurations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1LogConfiguration"
                        }
                    },
                    "listMetadata": {
                        "$ref": "#/components/schemas/v1ListMetadata"
                    }
                }
            },
            "v1ListLogQueriesRequest": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "order": {
                        "type": "string"
                    }
                }
            },
            "v1ListLogQueriesResponse": {
                "type": "object",
                "properties": {
                    "savedQueries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1LogQueryMetadata"
                        }
                    },
                    "listMetadata": {
                        "$ref": "#/components/schemas/v1ListMetadata"
                    }
                }
            },
            "v1ListLogsRequest": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "query": {
                        "type": "string"
                    },
                    "sortBy": {
                        "type": "string"
                    },
                    "startTimestamp": {
                        "type": "string"
                    },
                    "endTimestamp": {
                        "type": "string"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "histogramInterval": {
                        "type": "string"
                    },
                    "histogramGroupByFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v1ListLogsResponse": {
                "type": "object",
                "properties": {
                    "logs": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "numHits": {
                        "type": "string",
                        "format": "int64"
                    },
                    "aggregations": {
                        "$ref": "#/components/schemas/v1ListLogsResponseAggregations"
                    },
                    "listMetadata": {
                        "$ref": "#/components/schemas/v1ListMetadata"
                    }
                }
            },
            "v1ListLogsResponseAggregations": {
                "type": "object",
                "properties": {
                    "logsOverTime": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseDateBucket"
                        }
                    },
                    "sessionTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "sessionIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "sessionApplicationNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "sessionClientIpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "sessionServerIpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "queryFingerprints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "queryReceived": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "querySent": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "resourceIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "resourceNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "resourceTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "resourceHostnames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "resourceTechnologies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "connectorNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "connectorIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "spaceNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "spaceIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "userTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "userSubTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "userEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "userUsernames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "endUserTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "endUserNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "endUserEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "triggeredPolicyIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "triggeredPolicyNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "triggeredPolicyStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "triggeredPolicyTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "responseDataVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "responseReturnedColumnNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "responseReturnedColumnPaths": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "responseReturnedColumnDataLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "responseRowsSent": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "responseRowsReceived": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "deviceSystemVersions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "deviceKernelVersions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "deviceComputerNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "deviceUserNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "deviceModelNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "deviceModelIdentifiers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "deviceModelNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "deviceSerialNumbers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "userGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    },
                    "endUserGroups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseBucket"
                        }
                    }
                }
            },
            "v1ListLogsResponseBucket": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "v1ListLogsResponseDateBucket": {
                "type": "object",
                "properties": {
                    "datetime": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseGroupByBucket"
                        }
                    }
                }
            },
            "v1ListLogsResponseGroupByBucket": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListLogsResponseGroupByBucket"
                        }
                    }
                }
            },
            "v1ListLogsV2Request": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "query": {
                        "type": "string"
                    },
                    "sortBy": {
                        "type": "string"
                    },
                    "startTimestamp": {
                        "type": "string"
                    },
                    "endTimestamp": {
                        "type": "string"
                    },
                    "cursor": {
                        "type": "string"
                    }
                }
            },
            "v1ListLogsV2Response": {
                "type": "object",
                "properties": {
                    "logs": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "listMetadata": {
                        "$ref": "#/components/schemas/v1ListMetadata"
                    }
                }
            },
            "v1ListMetadata": {
                "type": "object",
                "properties": {
                    "after": {
                        "type": "string"
                    },
                    "before": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nextCursor": {
                        "type": "string"
                    }
                }
            },
            "v1LogConfiguration": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "encryptionKeyId": {
                        "type": "string"
                    },
                    "scope": {
                        "$ref": "#/components/schemas/v1LogConfigurationScope"
                    },
                    "request": {
                        "$ref": "#/components/schemas/v1LogConfigurationRequest"
                    },
                    "response": {
                        "$ref": "#/components/schemas/v1LogConfigurationResponse"
                    },
                    "stream": {
                        "$ref": "#/components/schemas/v1LogConfigurationStream"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "v1LogConfigurationRequest": {
                "type": "object",
                "properties": {
                    "sql": {
                        "$ref": "#/components/schemas/v1LogConfigurationSql"
                    },
                    "encrypt": {
                        "type": "boolean"
                    },
                    "maxPayloadSize": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "v1LogConfigurationResponse": {
                "type": "object",
                "properties": {
                    "encrypt": {
                        "type": "boolean"
                    },
                    "maxPayloadSize": {
                        "type": "string",
                        "format": "int64"
                    }
                }
            },
            "v1LogConfigurationScope": {
                "type": "object",
                "properties": {
                    "scope": {
                        "$ref": "#/components/schemas/v1LogConfigurationScopeType"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "connectorId": {
                        "type": "string"
                    },
                    "spaceId": {
                        "type": "string"
                    }
                }
            },
            "v1LogConfigurationScopeType": {
                "type": "string",
                "enum": [
                    "LOG_CONFIGURATION_SCOPE_TYPE_UNSPECIFIED",
                    "LOG_CONFIGURATION_SCOPE_TYPE_RESOURCE",
                    "LOG_CONFIGURATION_SCOPE_TYPE_CONNECTOR",
                    "LOG_CONFIGURATION_SCOPE_TYPE_SPACE",
                    "LOG_CONFIGURATION_SCOPE_TYPE_ORG"
                ],
                "default": "LOG_CONFIGURATION_SCOPE_TYPE_UNSPECIFIED"
            },
            "v1LogConfigurationSql": {
                "type": "object",
                "properties": {
                    "stripValues": {
                        "type": "boolean"
                    },
                    "encrypt": {
                        "type": "boolean"
                    }
                }
            },
            "v1LogConfigurationStream": {
                "type": "object",
                "properties": {
                    "encrypt": {
                        "type": "boolean"
                    }
                }
            },
            "v1LogQueryMetadata": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "query": {
                        "$ref": "#/components/schemas/v1SavedLogQuery"
                    }
                }
            },
            "v1MetricAggregation": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string"
                    },
                    "aggType": {
                        "type": "string"
                    }
                }
            },
            "v1SavedLogQuery": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1SavedLogQueryFilter"
                        }
                    },
                    "relativeTime": {
                        "type": "string",
                        "format": "int64"
                    },
                    "histogramGroupByFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metricAggregation": {
                        "$ref": "#/components/schemas/v1MetricAggregation"
                    }
                }
            },
            "v1SavedLogQueryFilter": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v1UpdateEncryptionKeyRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "provider": {
                        "type": "string"
                    },
                    "keyId": {
                        "type": "string"
                    },
                    "algorithm": {
                        "type": "string"
                    },
                    "decryptorUri": {
                        "type": "string"
                    }
                }
            },
            "v1UpdateEncryptionKeyResponse": {
                "type": "object",
                "properties": {
                    "encryptionKey": {
                        "$ref": "#/components/schemas/v1EncryptionKey"
                    }
                }
            },
            "v1UpdateLogConfigurationRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "encryptionKeyId": {
                        "type": "string"
                    },
                    "request": {
                        "$ref": "#/components/schemas/v1LogConfigurationRequest"
                    },
                    "response": {
                        "$ref": "#/components/schemas/v1LogConfigurationResponse"
                    },
                    "stream": {
                        "$ref": "#/components/schemas/v1LogConfigurationStream"
                    }
                }
            },
            "v1UpdateLogConfigurationResponse": {
                "type": "object",
                "properties": {
                    "logConfiguration": {
                        "$ref": "#/components/schemas/v1LogConfiguration"
                    }
                }
            },
            "v1UpdateLogQueryRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "query": {
                        "$ref": "#/components/schemas/v1SavedLogQuery"
                    }
                }
            },
            "v1UpdateLogQueryResponse": {
                "type": "object",
                "properties": {
                    "metadata": {
                        "$ref": "#/components/schemas/v1LogQueryMetadata"
                    }
                }
            }
        }
    }
}