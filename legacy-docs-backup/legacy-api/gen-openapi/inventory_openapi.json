{
    "openapi": "3.0.0",
    "info": {
        "title": "Inventory Service",
        "version": "1.0",
        "contact": {
            "name": "Formal",
            "url": "https://docs.private.joinformal.com/",
            "email": "info@joinformal.com"
        }
    },
    "tags": [
        {
            "name": "InventoryService"
        }
    ],
    "paths": {
        "/core.v1.InventoryService/CreateDataDomain": {
            "post": {
                "summary": "Create data domain",
                "description": "Create a data domain",
                "operationId": "InventoryService_CreateDataDomain",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1CreateDataDomainResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1CreateDataDomainRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/CreateDataLabel": {
            "post": {
                "summary": "Create data label",
                "description": "Create a data label",
                "operationId": "InventoryService_CreateDataLabel",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1CreateDataLabelResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1CreateDataLabelRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/CreateInventoryObject": {
            "post": {
                "summary": "Create inventory object",
                "description": "Create an inventory object",
                "operationId": "InventoryService_CreateInventoryObject",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1CreateInventoryObjectResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1CreateInventoryObjectRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/CreateInventoryTag": {
            "post": {
                "summary": "Create inventory tag",
                "description": "Create an inventory tag",
                "operationId": "InventoryService_CreateInventoryTag",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1CreateInventoryTagResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1CreateInventoryTagRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/DeleteDataDomain": {
            "post": {
                "summary": "Delete data domain",
                "description": "Delete a data domain",
                "operationId": "InventoryService_DeleteDataDomain",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1DeleteDataDomainResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1DeleteDataDomainRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/DeleteDataLabel": {
            "post": {
                "summary": "Delete data label",
                "description": "Delete a data label",
                "operationId": "InventoryService_DeleteDataLabel",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1DeleteDataLabelResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1DeleteDataLabelRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/DeleteInventoryObject": {
            "post": {
                "summary": "Delete inventory object",
                "description": "Delete an inventory object",
                "operationId": "InventoryService_DeleteInventoryObject",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1DeleteInventoryObjectResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1DeleteInventoryObjectRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/DeleteInventoryObjectsByResource": {
            "post": {
                "summary": "Delete inventory objects by resource",
                "description": "Delete all inventory objects for a resource",
                "operationId": "InventoryService_DeleteInventoryObjectsByResource",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1DeleteInventoryObjectsByResourceResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1DeleteInventoryObjectsByResourceRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/DeleteInventoryTag": {
            "post": {
                "summary": "Delete inventory tag",
                "description": "Delete an inventory tag",
                "operationId": "InventoryService_DeleteInventoryTag",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1DeleteInventoryTagResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1DeleteInventoryTagRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/GetDataDomain": {
            "post": {
                "summary": "Get data domain",
                "description": "Get a data domain",
                "operationId": "InventoryService_GetDataDomain",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetDataDomainResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetDataDomainRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/GetDataLabel": {
            "post": {
                "summary": "Get data label",
                "description": "Get a data label",
                "operationId": "InventoryService_GetDataLabel",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetDataLabelResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetDataLabelRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/GetInventoryObject": {
            "post": {
                "summary": "Get inventory object",
                "description": "Get an inventory object",
                "operationId": "InventoryService_GetInventoryObject",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetInventoryObjectResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetInventoryObjectRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/ListDataDomains": {
            "post": {
                "summary": "List data domains",
                "description": "List all data domains",
                "operationId": "InventoryService_ListDataDomains",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ListDataDomainsResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ListDataDomainsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/ListDataLabels": {
            "post": {
                "summary": "List data labels",
                "description": "List all data labels",
                "operationId": "InventoryService_ListDataLabels",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ListDataLabelsResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ListDataLabelsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/ListInventoryObjects": {
            "post": {
                "summary": "List inventory objects",
                "description": "List all inventory objects",
                "operationId": "InventoryService_ListInventoryObjects",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ListInventoryObjectsResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ListInventoryObjectsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/ListInventoryTags": {
            "post": {
                "summary": "List inventory tags",
                "description": "List all inventory tags",
                "operationId": "InventoryService_ListInventoryTags",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ListInventoryTagsResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ListInventoryTagsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/UpdateColumn": {
            "post": {
                "summary": "Update column",
                "description": "Update a column",
                "operationId": "InventoryService_UpdateColumn",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1UpdateColumnResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1UpdateColumnRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/UpdateDataDomain": {
            "post": {
                "summary": "Update data domain",
                "description": "Update a data domain",
                "operationId": "InventoryService_UpdateDataDomain",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1UpdateDataDomainResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1UpdateDataDomainRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/UpdateDataLabel": {
            "post": {
                "summary": "Update data label",
                "description": "Update a data label",
                "operationId": "InventoryService_UpdateDataLabel",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1UpdateDataLabelResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1UpdateDataLabelRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        },
        "/core.v1.InventoryService/UpdateInventoryObjectTags": {
            "post": {
                "summary": "Update inventory object tags",
                "description": "Update the tags of an inventory object",
                "operationId": "InventoryService_UpdateInventoryObjectTags",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1UpdateInventoryObjectTagsResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1UpdateInventoryObjectTagsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "InventoryService"
                ]
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ],
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "name": "X-API-Key",
                "in": "header"
            }
        },
        "schemas": {
            "corev1Column": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "dataLabel": {
                        "type": "string"
                    },
                    "dataLabelV2": {
                        "type": "string"
                    },
                    "dataType": {
                        "type": "string"
                    },
                    "dataTypeOid": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "dataLabelLockedForSidecar": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "markedForDeletionAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "corev1Db": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "schemas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/corev1Schema"
                        }
                    },
                    "tables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/corev1Table"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "markedForDeletionAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "corev1InventoryObject": {
                "type": "object",
                "properties": {
                    "datastore": {
                        "$ref": "#/components/schemas/v1Datastore"
                    },
                    "db": {
                        "$ref": "#/components/schemas/corev1Db"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/corev1Schema"
                    },
                    "table": {
                        "$ref": "#/components/schemas/corev1Table"
                    },
                    "column": {
                        "$ref": "#/components/schemas/corev1Column"
                    },
                    "subColumn": {
                        "$ref": "#/components/schemas/corev1SubColumn"
                    }
                }
            },
            "corev1Schema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "tables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/corev1Table"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "markedForDeletionAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "corev1SubColumn": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "dataLabel": {
                        "type": "string"
                    },
                    "dataLabelV2": {
                        "type": "string"
                    },
                    "dataType": {
                        "type": "string"
                    },
                    "dataTypeOid": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "dataLabelLockedForSidecar": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "markedForDeletionAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "corev1Table": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "resourceId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/corev1Column"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "resourceName": {
                        "type": "string"
                    },
                    "markedForDeletionAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "corev1Tag": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "protobufAny": {
                "type": "object",
                "properties": {
                    "@type": {
                        "type": "string",
                        "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                    }
                },
                "additionalProperties": {},
                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
            },
            "rpcStatus": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/protobufAny"
                        }
                    }
                }
            },
            "v1CreateDataDomainRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1DomainOwner"
                        }
                    },
                    "excludedPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "includedPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v1CreateDataDomainResponse": {
                "type": "object",
                "properties": {
                    "domain": {
                        "$ref": "#/components/schemas/v1Domain"
                    }
                }
            },
            "v1CreateDataLabelRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "classifierType": {
                        "type": "string"
                    },
                    "classifierData": {
                        "type": "string"
                    }
                }
            },
            "v1CreateDataLabelResponse": {
                "type": "object",
                "properties": {
                    "dataLabel": {
                        "$ref": "#/components/schemas/v1DataLabel"
                    }
                }
            },
            "v1CreateInventoryObjectRequest": {
                "type": "object",
                "properties": {
                    "datastoreId": {
                        "type": "string"
                    },
                    "objectType": {
                        "type": "string"
                    },
                    "db": {
                        "$ref": "#/components/schemas/v1CreateInventoryObjectRequestDb"
                    },
                    "schema": {
                        "$ref": "#/components/schemas/v1CreateInventoryObjectRequestSchema"
                    },
                    "table": {
                        "$ref": "#/components/schemas/v1CreateInventoryObjectRequestTable"
                    },
                    "column": {
                        "$ref": "#/components/schemas/v1CreateInventoryObjectRequestColumn"
                    },
                    "subColumn": {
                        "$ref": "#/components/schemas/v1CreateInventoryObjectRequestSubColumn"
                    }
                }
            },
            "v1CreateInventoryObjectRequestColumn": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "dataType": {
                        "type": "string"
                    }
                }
            },
            "v1CreateInventoryObjectRequestDb": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "v1CreateInventoryObjectRequestSchema": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "v1CreateInventoryObjectRequestSubColumn": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "subType": {
                        "type": "string"
                    }
                }
            },
            "v1CreateInventoryObjectRequestTable": {
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "v1CreateInventoryObjectResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1CreateInventoryTagRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "v1CreateInventoryTagResponse": {
                "type": "object",
                "properties": {
                    "tag": {
                        "$ref": "#/components/schemas/corev1Tag"
                    }
                }
            },
            "v1DataLabel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "classifierType": {
                        "type": "string"
                    },
                    "classifierData": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "v1Datastore": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "technology": {
                        "type": "string"
                    },
                    "dbs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/corev1Db"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "v1DeleteDataDomainRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteDataDomainResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteDataLabelRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteDataLabelResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteInventoryObjectRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteInventoryObjectResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteInventoryObjectsByResourceRequest": {
                "type": "object",
                "properties": {
                    "resourceId": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteInventoryObjectsByResourceResponse": {
                "type": "object",
                "properties": {
                    "resourceId": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteInventoryTagRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1DeleteInventoryTagResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1Domain": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1DomainOwner"
                        }
                    },
                    "excludedPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "includedPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "v1DomainOwner": {
                "type": "object",
                "properties": {
                    "objectType": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    }
                }
            },
            "v1ErrorObject": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                }
            },
            "v1Field": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "operator": {
                        "type": "string"
                    },
                    "value": {
                        "$ref": "#/components/schemas/protobufAny"
                    }
                }
            },
            "v1FieldGroup": {
                "type": "object",
                "properties": {
                    "operator": {
                        "type": "string"
                    },
                    "filters": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Filter"
                        }
                    }
                }
            },
            "v1Filter": {
                "type": "object",
                "properties": {
                    "field": {
                        "$ref": "#/components/schemas/v1Field"
                    },
                    "group": {
                        "$ref": "#/components/schemas/v1FieldGroup"
                    }
                }
            },
            "v1GetDataDomainRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1GetDataDomainResponse": {
                "type": "object",
                "properties": {
                    "domain": {
                        "$ref": "#/components/schemas/v1Domain"
                    }
                }
            },
            "v1GetDataLabelRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1GetDataLabelResponse": {
                "type": "object",
                "properties": {
                    "dataLabel": {
                        "$ref": "#/components/schemas/v1DataLabel"
                    }
                }
            },
            "v1GetInventoryObjectRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1GetInventoryObjectResponse": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/components/schemas/corev1InventoryObject"
                    }
                }
            },
            "v1ListDataDomainsRequest": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "order": {
                        "type": "string"
                    },
                    "search": {
                        "type": "string"
                    },
                    "searchFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "filter": {
                        "$ref": "#/components/schemas/v1Filter"
                    }
                }
            },
            "v1ListDataDomainsResponse": {
                "type": "object",
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1Domain"
                        }
                    },
                    "listMetadata": {
                        "$ref": "#/components/schemas/v1ListMetadata"
                    }
                }
            },
            "v1ListDataLabelsRequest": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "order": {
                        "type": "string"
                    }
                }
            },
            "v1ListDataLabelsResponse": {
                "type": "object",
                "properties": {
                    "dataLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1DataLabel"
                        }
                    },
                    "listMetadata": {
                        "$ref": "#/components/schemas/v1ListMetadata"
                    }
                }
            },
            "v1ListInventoryObjectsRequest": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "order": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "excludedPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "includedObjects": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "search": {
                        "type": "string"
                    },
                    "searchFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "filter": {
                        "$ref": "#/components/schemas/v1Filter"
                    }
                }
            },
            "v1ListInventoryObjectsResponse": {
                "type": "object",
                "properties": {
                    "inventory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/corev1InventoryObject"
                        }
                    },
                    "listMetadata": {
                        "$ref": "#/components/schemas/v1ListMetadata"
                    }
                }
            },
            "v1ListInventoryTagsRequest": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "order": {
                        "type": "string"
                    }
                }
            },
            "v1ListInventoryTagsResponse": {
                "type": "object",
                "properties": {
                    "tags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/corev1Tag"
                        }
                    },
                    "listMetadata": {
                        "$ref": "#/components/schemas/v1ListMetadata"
                    }
                }
            },
            "v1ListMetadata": {
                "type": "object",
                "properties": {
                    "after": {
                        "type": "string"
                    },
                    "before": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nextCursor": {
                        "type": "string"
                    }
                }
            },
            "v1UpdateColumnRequest": {
                "type": "object",
                "properties": {
                    "datastoreId": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "lockStatusValidated": {
                        "type": "boolean"
                    },
                    "dataLabel": {
                        "type": "string"
                    }
                }
            },
            "v1UpdateColumnResponse": {
                "type": "object",
                "properties": {
                    "datastoreId": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "v1UpdateDataDomainRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "owners": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1DomainOwner"
                        }
                    },
                    "excludedPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "includedPaths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v1UpdateDataDomainResponse": {
                "type": "object",
                "properties": {
                    "domain": {
                        "$ref": "#/components/schemas/v1Domain"
                    }
                }
            },
            "v1UpdateDataLabelRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "classifierType": {
                        "type": "string"
                    },
                    "classifierData": {
                        "type": "string"
                    }
                }
            },
            "v1UpdateDataLabelResponse": {
                "type": "object",
                "properties": {
                    "dataLabel": {
                        "$ref": "#/components/schemas/v1DataLabel"
                    }
                }
            },
            "v1UpdateInventoryObjectTagsRequest": {
                "type": "object",
                "properties": {
                    "datastoreId": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v1UpdateInventoryObjectTagsResponse": {
                "type": "object",
                "properties": {
                    "object": {
                        "$ref": "#/components/schemas/v1UpdateInventoryObjectTagsResponseInventoryObject"
                    }
                }
            },
            "v1UpdateInventoryObjectTagsResponseInventoryObject": {
                "type": "object",
                "properties": {
                    "datastoreId": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "dbPath": {
                        "type": "string"
                    },
                    "tablePath": {
                        "type": "string"
                    },
                    "schemaPath": {
                        "type": "string"
                    },
                    "tableAttributeNumber": {
                        "type": "string",
                        "format": "uint64"
                    },
                    "dataType": {
                        "type": "string"
                    },
                    "dataLabel": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dataStoreName": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "validated": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}