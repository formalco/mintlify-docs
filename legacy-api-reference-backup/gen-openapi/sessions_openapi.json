{
    "openapi": "3.0.0",
    "info": {
        "title": "Session Service",
        "version": "1.0",
        "contact": {
            "name": "Formal",
            "url": "https://docs.private.joinformal.com/",
            "email": "info@joinformal.com"
        }
    },
    "tags": [
        {
            "name": "SessionsService"
        }
    ],
    "paths": {
        "/core.v1.SessionsService/CancelSession": {
            "post": {
                "summary": "Cancel a session",
                "description": "Cancel an active session",
                "operationId": "SessionsService_CancelSession",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1CancelSessionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1CancelSessionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SessionsService"
                ]
            }
        },
        "/core.v1.SessionsService/GetSession": {
            "post": {
                "summary": "Get a session",
                "description": "Get details of a specific session",
                "operationId": "SessionsService_GetSession",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetSessionResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetSessionRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SessionsService"
                ]
            }
        },
        "/core.v1.SessionsService/GetSessionTranscript": {
            "post": {
                "summary": "Get session transcript",
                "description": "Get the transcript of a specific session",
                "operationId": "SessionsService_GetSessionTranscript",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1GetSessionTranscriptResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1GetSessionTranscriptRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SessionsService"
                ]
            }
        },
        "/core.v1.SessionsService/ListSessions": {
            "post": {
                "summary": "List of sessions",
                "description": "Get all your sessions",
                "operationId": "SessionsService_ListSessions",
                "responses": {
                    "200": {
                        "description": "A successful response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ListSessionsResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Caller isn't authorized to perform the operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User requested a resource (for example, a sidecar or resource) that can't be found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An invariant expected by the underlying system has been broken. Reserved for serious errors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/v1ErrorObject"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "An unexpected error response.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/rpcStatus"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/v1ListSessionsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "SessionsService"
                ]
            }
        }
    },
    "security": [
        {
            "ApiKeyAuth": []
        }
    ],
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "name": "X-API-Key",
                "in": "header"
            }
        },
        "schemas": {
            "FormalUserInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "externalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SessionObjectNetwork": {
                "type": "object",
                "properties": {
                    "clientIpAddress": {
                        "type": "string"
                    },
                    "serverIpAddress": {
                        "type": "string"
                    }
                }
            },
            "UserFormal": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/FormalUserInfo"
                    },
                    "endUser": {
                        "$ref": "#/components/schemas/FormalUserInfo"
                    }
                }
            },
            "UserNative": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    }
                }
            },
            "protobufAny": {
                "type": "object",
                "properties": {
                    "@type": {
                        "type": "string",
                        "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
                    }
                },
                "additionalProperties": {},
                "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
            },
            "rpcStatus": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/protobufAny"
                        }
                    }
                }
            },
            "v1CancelSessionRequest": {
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string"
                    },
                    "connectorId": {
                        "type": "string"
                    }
                }
            },
            "v1CancelSessionResponse": {
                "type": "object",
                "properties": {
                    "sessionShutdown": {
                        "$ref": "#/components/schemas/v1SessionShutdown"
                    }
                }
            },
            "v1ErrorObject": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                }
            },
            "v1GetSessionRequest": {
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string"
                    }
                }
            },
            "v1GetSessionResponse": {
                "type": "object",
                "properties": {
                    "session": {
                        "$ref": "#/components/schemas/v1SessionObject"
                    }
                }
            },
            "v1GetSessionTranscriptRequest": {
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string"
                    }
                }
            },
            "v1GetSessionTranscriptResponse": {
                "type": "object",
                "properties": {
                    "transcript": {
                        "type": "string"
                    }
                }
            },
            "v1ListMetadata": {
                "type": "object",
                "properties": {
                    "after": {
                        "type": "string"
                    },
                    "before": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "nextCursor": {
                        "type": "string"
                    }
                }
            },
            "v1ListSessionsRequest": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "query": {
                        "type": "string"
                    },
                    "sortBy": {
                        "type": "string"
                    },
                    "startTimestamp": {
                        "type": "string",
                        "title": "string start_timestamp = 4 [(buf.validate.field).string.min_len = 1];\nstring end_timestamp = 5 [(buf.validate.field).string.min_len = 1];"
                    },
                    "endTimestamp": {
                        "type": "string"
                    },
                    "cursor": {
                        "type": "string"
                    },
                    "histogramInterval": {
                        "type": "string"
                    },
                    "histogramGroupByFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "v1ListSessionsResponse": {
                "type": "object",
                "properties": {
                    "sessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1SessionObject"
                        }
                    },
                    "aggregations": {
                        "$ref": "#/components/schemas/v1ListSessionsResponseAggregations"
                    },
                    "numHits": {
                        "type": "string",
                        "format": "int64"
                    },
                    "listMetadata": {
                        "$ref": "#/components/schemas/v1ListMetadata"
                    }
                }
            },
            "v1ListSessionsResponseAggregations": {
                "type": "object",
                "properties": {
                    "logsOverTime": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseDateBucket"
                        }
                    },
                    "sessionTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "sessionIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "sessionClientIpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "sessionServerIpAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "queryFingerprints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "queryReceived": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "querySent": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "resourceIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "resourceNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "resourceTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "resourceHostnames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "resourceTechnologies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "connectorNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "connectorIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "spaceNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "spaceIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "userTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "userSubTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "userEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "userUsernames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "endUserTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "endUserNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "endUserEmails": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "triggeredPolicyIds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "triggeredPolicyNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "triggeredPolicyStatuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "triggeredPolicyTypes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "responseDataVolumes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "responseReturnedColumnNames": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "responseReturnedColumnDataLabels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "responseRowsSent": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    },
                    "responseRowsReceived": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseBucket"
                        }
                    }
                }
            },
            "v1ListSessionsResponseBucket": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "v1ListSessionsResponseDateBucket": {
                "type": "object",
                "properties": {
                    "datetime": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseGroupByBucket"
                        }
                    }
                }
            },
            "v1ListSessionsResponseGroupByBucket": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "buckets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/v1ListSessionsResponseGroupByBucket"
                        }
                    }
                }
            },
            "v1SessionObject": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "duration": {
                        "type": "string"
                    },
                    "sessionStatus": {
                        "type": "string"
                    },
                    "network": {
                        "$ref": "#/components/schemas/SessionObjectNetwork"
                    },
                    "sidecar": {
                        "$ref": "#/components/schemas/v1SessionObjectSidecar"
                    },
                    "user": {
                        "$ref": "#/components/schemas/v1SessionObjectUser"
                    },
                    "resource": {
                        "$ref": "#/components/schemas/v1SessionObjectResource"
                    },
                    "connector": {
                        "$ref": "#/components/schemas/v1SessionObjectConnector"
                    }
                }
            },
            "v1SessionObjectConnector": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "v1SessionObjectResource": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "oneof: aws, datastore, instance"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "technology": {
                        "type": "string"
                    }
                }
            },
            "v1SessionObjectSidecar": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "technology": {
                        "type": "string"
                    }
                }
            },
            "v1SessionObjectUser": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "formal": {
                        "$ref": "#/components/schemas/UserFormal"
                    },
                    "native": {
                        "$ref": "#/components/schemas/UserNative"
                    }
                }
            },
            "v1SessionShutdown": {
                "type": "object",
                "properties": {
                    "sessionId": {
                        "type": "string"
                    },
                    "connectorId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            }
        }
    }
}